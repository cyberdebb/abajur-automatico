assign XIO_2[3] = servo_pulse; //for V'

reg [31:0] servo_count;

initial begin

servo_count <= 32'b0;

servo_A <= 1'b0;

end

always @(posedge CLK_66)

begin

servo_count <= servo_count + 1'b1;

if(servo_count > 400000000) //Clock cycle 66MHz, 1/66M * 400000000 ~ 5 seconds

begin

servo_A <= !servo_A;

servo_count <= 32'b0;

end

end

reg [31:0] ex_auto;

initial begin

ex_auto <= 32'b0;

servo_auto <= 1'b0;

end

always @(posedge CLK_66)

begin

if(servo_A==1'b1)

begin

ex_auto <= ex_auto + 1'b1;

if(ex_auto > 100000) //Clock cycle 66MHz, this PWM is ~1.5ms, servo rotates to 120 deg

begin

servo_auto <= !servo_auto;

ex_auto <= 32'b0;

end

end

if(servo_A==1'b0)

begin

ex_auto <= ex_auto + 1'b1;

if(ex_auto > 10000) //Clock cycle 66MHz, this PWM is ~0.15ms, servo rotates to 0 deg

begin

servo_auto <= !servo_auto;

ex_auto <= 32'b0;

end

end

end
